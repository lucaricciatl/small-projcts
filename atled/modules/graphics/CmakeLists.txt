# Create a library from the submodule's source files
add_library(graphics
    src/CameraManager.cpp
    src/GraphicsContext.cpp
    src/GraphicsManager.cpp
    src/Polyline2D.cpp 
    src/Polyline3D.cpp
    src/Polygon2d.cpp
    src/Color.cpp
    src/LayerManager.cpp
    src/BuffersManager.cpp

    #privates
    src/PointBuffer2D.cpp
    src/PointBuffer3D.cpp
    src/LineBuffer2D.cpp
    src/LineBuffer3D.cpp
    src/Layer.cpp

)

# raylib
find_package(raylib QUIET)
if (NOT raylib_FOUND)
    include(FetchContent)
    FetchContent_Declare(
        raylib
        GIT_REPOSITORY https://github.com/raysan5/raylib.git
        GIT_TAG 5.0
        GIT_SHALLOW 1
    )
    FetchContent_MakeAvailable(raylib)
endif()

# raylib-cpp
find_package(raylib_cpp QUIET)
if (NOT raylib_cpp_FOUND)
    if (NOT DEFINED RAYLIB_CPP_VERSION)
        set(RAYLIB_CPP_VERSION v5.0.2)
    endif()
    include(FetchContent)
    FetchContent_Declare(
        raylib_cpp
        GIT_REPOSITORY https://github.com/RobLoach/raylib-cpp.git
        GIT_TAG ${RAYLIB_CPP_VERSION}
    )
    FetchContent_MakeAvailable(raylib_cpp)
endif()


# Link raylib to the graphics library
target_link_libraries(graphics PUBLIC raylib raylib_cpp)
set_target_properties(raylib PROPERTIES FOLDER "modules/external/graphics/raylib")
set_target_properties(raylib_cpp PROPERTIES FOLDER "modules/external/graphics/raylib_cpp")

# Specify include directories for the submodule
target_include_directories(graphics PUBLIC
    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${raylib_SOURCE_DIR}/include
)

target_include_directories(graphics PRIVATE
    ${CMAKE_CURRENT_SOURCE_DIR}/include/private
)

set_target_properties(graphics PROPERTIES FOLDER "modules")
